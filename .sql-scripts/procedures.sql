CREATE OR ALTER PROCEDURE dbo.Vulnerability_UpsertBulk
	@Vulnerabilities dbo.VulnerabilityBulkType READONLY,
	@Identifiers dbo.VulnerabilityIdentifiersBulkType READONLY,
	@References dbo.VulnerabilityReferencesBulkType READONLY
AS

SET NOCOUNT ON;
SET XACT_ABORT ON;

DECLARE @InternalTran BIT=0

IF @@TRANCOUNT=0
BEGIN
	BEGIN TRAN
	SET @InternalTran=1
END

MERGE INTO dbo.Vulnerability AS t
USING @Vulnerabilities AS s
	ON t.ExternalId = s.ExternalId
WHEN NOT MATCHED BY TARGET THEN
	INSERT(ExternalId, PackageName, [Version], Title, [Description], Severity, CVSS, CVSSv3, CreationTime, ModificationTime, PublicationTime, DisclosureTime)
	VALUES(s.ExternalId, s.PackageName, s.[Version], s.Title , s.[Description], s.Severity, s.CVSS, s.CVSSv3, s.CreationTime, s.ModificationTime, s.PublicationTime, s.DisclosureTime)
WHEN MATCHED AND (
		s.PackageName<>t.PackageName 
		OR s.[Version]<>t.[Version]
		OR s.Title<>t.Title
		OR s.[Description]<>t.[Description]
		OR s.Severity<>t.Severity
		OR s.CVSS<>t.CVSS OR (s.CVSS IS NULL AND t.CVSS IS NOT NULL) OR (s.CVSS IS NOT NULL AND t.CVSS IS NULL)
		OR s.CVSSv3<>t.CVSSv3 OR (s.CVSSv3 IS NULL AND t.CVSSv3 IS NOT NULL) OR (s.CVSSv3 IS NOT NULL AND t.CVSSv3 IS NULL)
		OR s.CreationTime<>t.CreationTime
		OR s.ModificationTime<>t.ModificationTime
		OR s.PublicationTime<>t.PublicationTime
		OR s.DisclosureTime<>t.DisclosureTime OR (s.DisclosureTime IS NULL AND t.DisclosureTime IS NOT NULL) OR (s.DisclosureTime IS NOT NULL AND t.DisclosureTime IS NULL)
		)
	THEN
	UPDATE SET
		PackageName=s.PackageName,
		[Version]=s.[Version],
		Title=s.Title,
		[Description]=s.[Description],
		Severity=s.Severity,
		CVSS=s.CVSS,
		CVSSv3=s.CVSSv3,
		CreationTime=s.CreationTime,
		ModificationTime=s.ModificationTime,
		PublicationTime=s.PublicationTime,
		DisclosureTime=s.DisclosureTime;

with identifiers as (
	SELECT DISTINCT
		v.Id as VulnerabilityId, t.IdentifierType, t.Identifier
	FROM
		dbo.Vulnerability v
		INNER JOIN @Identifiers t ON v.ExternalId=t.ExternalId
)
MERGE INTO dbo.VulnerabilityIdentifiers AS t
USING identifiers AS s
	ON t.VulnerabilityId=s.VulnerabilityId AND t.IdentifierType=s.IdentifierType AND t.Identifier=s.Identifier
WHEN NOT MATCHED BY TARGET THEN
	INSERT(VulnerabilityId, IdentifierType, Identifier)
	VALUES(s.VulnerabilityId, s.IdentifierType, s.Identifier)
WHEN NOT MATCHED BY SOURCE AND EXISTS(SELECT 1 FROM @Vulnerabilities vt INNER JOIN dbo.Vulnerability v ON vt.ExternalId=v.ExternalId WHERE v.Id=t.VulnerabilityId) THEN
	DELETE;

with refs as (
	SELECT DISTINCT
		v.Id as VulnerabilityId, t.[Url]
	FROM
		dbo.Vulnerability v
		INNER JOIN @References t ON v.ExternalId=t.ExternalId
)
MERGE INTO dbo.VulnerabilityReferences AS t
USING refs AS s
	ON t.VulnerabilityId=s.VulnerabilityId AND t.[Url]=s.[Url]
WHEN NOT MATCHED BY TARGET THEN
	INSERT(VulnerabilityId, [Url])
	VALUES(s.VulnerabilityId, s.[Url])
WHEN NOT MATCHED BY SOURCE AND EXISTS(SELECT 1 FROM @Vulnerabilities vt INNER JOIN dbo.Vulnerability v ON vt.ExternalId=v.ExternalId WHERE v.Id=t.VulnerabilityId) THEN
	DELETE;

IF @InternalTran=1
BEGIN
	COMMIT TRAN
END

go

GRANT EXEC ON dbo.Vulnerability_UpsertBulk to radixwriter

go


CREATE OR ALTER PROCEDURE dbo.Image_RegisterScan
	@ImageName VARCHAR(255),
	@ScanTime DATETIMEOFFSET(0),
	@ScanSuccess BIT,
	@Vulnerabilities dbo.VulnerabilityBulkType READONLY,
	@Identifiers dbo.VulnerabilityIdentifiersBulkType READONLY,
	@References dbo.VulnerabilityReferencesBulkType READONLY
AS

SET NOCOUNT ON;
SET XACT_ABORT ON;

DECLARE @ImageId INT, @ImageScanId INT, @InternalTran BIT=0

IF @@TRANCOUNT=0
BEGIN
	BEGIN TRAN
	SET @InternalTran=1
END

INSERT INTO dbo.[Image]([Name])
SELECT @ImageName WHERE NOT EXISTS(SELECT 1 FROM dbo.[Image] WITH(UPDLOCK,ROWLOCK) WHERE [Name]=@ImageName)

SET @ImageId=(SELECT Id FROM dbo.[Image] WHERE [Name]=@ImageName)

INSERT INTO dbo.ImageScan(ImageId, ScanTime, ScanSuccess)
VALUES(@ImageId, @ScanTime, @ScanSuccess)

SELECT @ImageScanId=SCOPE_IDENTITY()

EXEC dbo.Vulnerability_UpsertBulk @Vulnerabilities=@Vulnerabilities, @Identifiers=@Identifiers, @References=@References;

INSERT INTO dbo.ImageScanVulnerabilities(ImageScanId, VulnerabilityId)
SELECT
	@ImageScanId ImageScanId,
	v.Id as VulnerabilityId
FROM
	dbo.Vulnerability v
	INNER JOIN @Vulnerabilities t on v.ExternalId=t.ExternalId

IF @InternalTran=1
BEGIN
	COMMIT TRAN
END

go

GRANT EXEC ON dbo.Image_RegisterScan to radixwriter

go