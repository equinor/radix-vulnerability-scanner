# Build stage
FROM --platform=$BUILDPLATFORM docker.io/golang:1.22.5-alpine3.20 AS builder
ARG TARGETARCH
WORKDIR /src
ENV CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=${TARGETARCH}
COPY ./go.mod ./go.sum ./
RUN go mod download
COPY . .
RUN go build -ldflags="-s -w" -o /build/radix-vulnerability-scanner

# SNYK cli
FROM --platform=$BUILDPLATFORM docker.io/alpine:3.20 AS tools
ARG TARGETARCH
RUN snykVersion=v1.1292.1 snykBinary=snyk-linux && \
    if [ "${TARGETARCH}" = "arm64" ]; then snykBinary=snyk-linux-arm64; fi && \
    wget -O /snyk -q https://github.com/snyk/cli/releases/download/${snykVersion}/${snykBinary}

# Final stage
FROM docker.io/ubuntu:24.04
WORKDIR /app
RUN usermod --home /home/radix-vulnerability-scanner ubuntu
COPY --from=builder /build/radix-vulnerability-scanner .
COPY --from=tools --chmod=755 /snyk /usr/local/bin/snyk
COPY --from=gcr.io/distroless/static /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
USER 1000
ENTRYPOINT ["/app/radix-vulnerability-scanner"]
