
nameOverride: ""
fullnameOverride: ""

image:
  repository: radixdev.azurecr.io/radix-vulnerability-scanner
  tag: latest

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # Specifies whether RBAC resources should be created
  create: true

# SQL connection spec.
sql:
  serverName: ""
  databaseName: ""

# Defines or creates a secret that holds environment variables
envSecret:
  create: true
  name: ""

# SNYK access token
snykToken: ""

# Cron schedule defines when all images are requeued for rescan.
# Enqueued images are only scanned if the last scan is older than rescan age
fullSyncCronSpec: ""  # Example "0 20,22,0,2,4 * * *"

# List of app names to exclude from scan
appNameExcludeList: []
  # - canarycicd-test2
  # - canarycicd-test1

workloadIdentityRegistries:  []
  # - radixdev.azurecr.io
  # - radixprod.azurecr.io

# Number of workers to process images
# workers: 1

# Specifies a list of usernames and passwords used to access images in private registries
dockerAuths: []
  # - registry: quay.io
  #   username: "user1"
  #   password: "pwd1"
  # - registry: hub.docker.com
  #   username: "user2"
  #   password: "pwd2"


# Defines or creates a secret that contains Dockers auths
dockerSecret:
  create: true
  # Override name of secret where docker auths are stored
  # If create is false, name can be specified to reference an existing secret
  name: ""
  # Override secret key containing dockers auths json
  key: ""

scan:
  # Image scan timeout
  timeout: 5m
  # An image is not scanned if age of last scan is less than rescanAge
  rescanAge: 24h

# Name and path of kube config file for connecting to K8S API server
# InCluster connection is used if omitted
kubeConfigFile: ""

# Name and path to file containing Docker auths data used to pull images
# Must be set if docker auth file is manually mounted using extraVolumeMounts
dockerConfigFile: "" #"/usr/local/bin/.docker/dockercfg.json"

# Additional command line flags to pass to radix-vulnerability-scanner.
extraArgs: []

# Annotations to add to the Deployment
deploymentAnnotations: {}

# Extra pod labels
podLabels: {}

# Extra volumes. Can be used to manually mount the dockerConfigFile
extraVolumes: []

# Extra volume mounts. Can be used to manually mount the dockerConfigFile
extraVolumeMounts: []

# Affinity for pod scheduling
affinity: {}

# Node selector for pod scheduling
nodeSelector: {}

# Tolerations for pod scheduling
tolerations: []

resources:
  requests:
    cpu: 100m
    memory: 1000Mi
  limits:
    cpu: 500m
    memory: 5000Mi

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000

securityContext:
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
