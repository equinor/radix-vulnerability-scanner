package main

import (
	"context"
	"os"
	"os/signal"
	"syscall"

	"github.com/equinor/radix-vulnerability-scanner/pkg/server"

	"github.com/sirupsen/logrus"
	logger "github.com/sirupsen/logrus"
)

var defaultEnqueueAllCronSpec = "0 20 * * *"

func main() {
	logrus.SetLevel(logger.DebugLevel)
	logrus.Info("Starting Radix Vulnerability Scanner")

	ctx, cancel := signal.NotifyContext(context.Background(), syscall.SIGINT, syscall.SIGTERM)
	defer cancel()

	opts, err := server.LoadOptions(os.Args[1:])
	if err != nil {
		panic(err)
	}

	srv, err := server.New(opts)
	if err != nil {
		panic(err)
	}
	srv.Run(ctx.Done())
}
