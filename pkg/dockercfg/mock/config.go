// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/dockercfg/config.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenner is a mock of Tokenner interface.
type MockTokenner struct {
	ctrl     *gomock.Controller
	recorder *MockTokennerMockRecorder
}

// MockTokennerMockRecorder is the mock recorder for MockTokenner.
type MockTokennerMockRecorder struct {
	mock *MockTokenner
}

// NewMockTokenner creates a new mock instance.
func NewMockTokenner(ctrl *gomock.Controller) *MockTokenner {
	mock := &MockTokenner{ctrl: ctrl}
	mock.recorder = &MockTokennerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenner) EXPECT() *MockTokennerMockRecorder {
	return m.recorder
}

// Token mocks base method.
func (m *MockTokenner) Token(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Token", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Token indicates an expected call of Token.
func (mr *MockTokennerMockRecorder) Token(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Token", reflect.TypeOf((*MockTokenner)(nil).Token), arg0)
}
