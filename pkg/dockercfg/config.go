package dockercfg

import (
	"encoding/json"
	"errors"
	"io/ioutil"
)

type DockerConfigAuthJSON struct {
	Auths DockerAuthConfig `json:"auths"`
}

// DockerAuthConfig defines a map of registry names and authentication information
type DockerAuthConfig map[string]DockerAuthConfigEntry

// DockerAuthConfigEntry contains username and password for a docker registry
type DockerAuthConfigEntry struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

//ReadDockerAuthConfigFromFile attempts to read docker configJSON from a given file path.
func ReadDockerAuthConfigFromFile(filePath string) (cfg DockerAuthConfig, err error) {
	var contents []byte

	if contents, err = ioutil.ReadFile(filePath); err != nil {
		return nil, err
	}
	return ReadDockerAuthConfigFromBytes(contents)
}

//ReadDockerAuthConfigFromFile attempts to unmarshal a slice of bytes to a DockerAuthConfig.
func ReadDockerAuthConfigFromBytes(contents []byte) (cfg DockerAuthConfig, err error) {
	var cfgJSON DockerConfigAuthJSON
	if err = json.Unmarshal(contents, &cfgJSON); err != nil {
		return nil, errors.New("error occurred while trying to unmarshal json")
	}
	cfg = cfgJSON.Auths
	return
}
