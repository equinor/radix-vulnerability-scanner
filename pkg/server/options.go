package server

import "time"

type (
	// Options for server
	Options struct {
		FullSyncCronSpec   string                   `flag:"full-sync-cron-spec" cfg:"full_sync_cron_spec"`
		AppNameExcludeList []string                 `flag:"app-name-exclude-list" cfg:"app_name_exclude_list"`
		Workers            uint                     `flag:"workers" cfg:"workers"`
		PrettyPrint        bool                     `flag:"pretty-print" cfg:"pretty_print" default:"false"`
		LogLevel           string                   `flag:"log-level" cfg:"log_level" default:"debug"`
		DB                 DBOptions                `cfg:",squash"`
		Docker             DockerOptions            `cfg:",squash"`
		Kube               KubeOptions              `cfg:",squash"`
		VulnerabilityScan  VulnerabilityScanOptions `cfg:",squash"`
	}

	// VulnerabilityScanOptions
	VulnerabilityScanOptions struct {
		ScanTimeout time.Duration `flag:"vulnerability-scan-timeout" cfg:"vulnerability_scan_timeout"`
		RescanAge   time.Duration `flag:"vulnerability-rescan-age" cfg:"vulnerability_rescan_age"`
	}

	// DBOptions contains configuration for database connection
	DBOptions struct {
		Server   string `flag:"db-server" cfg:"db_server"`
		Database string `flag:"db-database" cfg:"db_database"`
	}

	// DockerOptions contains configuration for accessing docker images
	DockerOptions struct {
		AuthsFile string `flag:"docker-config-file" cfg:"docker_config_file"`
	}

	// KubeOptions contains configuration for connecting to the Kubernetes API server
	KubeOptions struct {
		KubeConfigFile string `flag:"kube-config-file" cfg:"kube_config_file"`
	}
)
