package scan

import (
	"context"

	"github.com/equinor/radix-vulnerability-scanner/pkg/acr"
	"github.com/equinor/radix-vulnerability-scanner/pkg/dockercfg"
	"github.com/equinor/radix-vulnerability-scanner/pkg/options"
)

// Scanner defines methods for scanning Docker images for vulnerabilities
type Scanner interface {
	// Scan scans a Docker image for vulnerabilities
	Scan(ctx context.Context, image string, dockerConfig dockercfg.DockerConfig) (*ScanResult, error)
}

func New(ctx context.Context, opts *options.DockerOptions) (Scanner, error) {
	var dockerAuth dockercfg.DockerConfig
	var err error

	if opts.AuthsFile != "" {
		dockerAuth, err = dockercfg.ReadDockerAuthConfigFromFile(opts.AuthsFile)
		if err != nil {
			return nil, err
		}
	}

	tokenStore, err := acr.NewTokenStore(ctx)
	if err != nil {
		return nil, err
	}

	return NewSnyk(dockerAuth, tokenStore), nil
}
