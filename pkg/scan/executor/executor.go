package executor

import (
	"context"
	"io"
	"os/exec"

	"github.com/equinor/radix-vulnerability-scanner/pkg/utils/logwriter"
	"github.com/rs/zerolog"
)

type Executor interface {
	Execute(ctx context.Context, command string, args []string, stdOutWriter io.Writer) error
}

type CommandExecutor struct{}

func New() *CommandExecutor {
	return &CommandExecutor{}
}

func (CommandExecutor) Execute(ctx context.Context, command string, args []string, stdOutWriter io.Writer) error {
	cmd := exec.CommandContext(ctx, command, args...)
	cmd.Stderr = logwriter.New(zerolog.Ctx(ctx), zerolog.ErrorLevel)
	cmd.Stdout = stdOutWriter

	if err := cmd.Start(); err != nil {
		return err
	}

	return cmd.Wait()
}
