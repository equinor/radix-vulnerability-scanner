package scan

import (
	"bytes"
	"context"
	"encoding/json"
	"os/exec"

	"github.com/sirupsen/logrus"
)

var _ Scanner = &snykScanner{}

type snykScanner struct {
}

func Snyk() Scanner {
	return &snykScanner{}
}

func (snyk *snykScanner) Scan(ctx context.Context, image string) (*ScanResult, error) {
	args := []string{
		"container",
		"test",
		"--json",
		image,
	}

	buf := &bytes.Buffer{}
	cmd := exec.CommandContext(ctx, "snyk", args...)
	cmd.Stdout = buf
	if err := cmd.Start(); err != nil {
		return nil, err
	}

	err := cmd.Wait()
	if err != nil && !snyk.isSnykScanSuccessErr(err) {
		logrus.Error(err)
		return nil, err
	}

	var result ScanResult
	if err = json.Unmarshal(buf.Bytes(), &result); err != nil {
		return nil, err
	}

	return &result, nil
}

func (snyk *snykScanner) isSnykScanSuccessErr(err error) bool {
	if err == nil {
		return true
	}

	if exitErr, ok := err.(*exec.ExitError); ok {
		exitCode := exitErr.ExitCode()
		return exitCode == 0 || exitCode == 1
	}

	return false
}
