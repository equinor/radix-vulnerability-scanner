package db

import (
	"time"
)

type (
	VulnerabilityBulkDto struct {
		ExternalId       string
		PackageName      string
		Version          string
		Title            string
		Description      string
		Severity         string
		CVSS             *float32
		CVSSv3           string
		CreationTime     time.Time
		ModificationTime time.Time
		PublicationTime  time.Time
		DisclosureTime   *time.Time
	}

	VulnerabilityIdentifierBulkDto struct {
		ExternalId     string
		IdentifierType string
		Identifier     string
	}
	VulnerabilityReferenceBulkDto struct {
		ExternalId string
		Url        string
	}
)

type (
	VulnerabilityDto struct {
		Id               int                          `gorm:"column:Id;primaryKey;<-:false"`
		ExternalId       string                       `gorm:"column:ExternalId;<-:false"`
		PackageName      string                       `gorm:"column:PackageName;<-:false"`
		Version          string                       `gorm:"column:Version;<-:false"`
		Description      string                       `gorm:"column:Description;<-:false"`
		Severity         string                       `gorm:"column:Severity;<-:false"`
		CVSS             *float32                     `gorm:"column:CVSS;<-:false"`
		CVSSv3           string                       `gorm:"column:CVSSv3;<-:false"`
		CreationTime     time.Time                    `gorm:"column:CreationTime;<-:false"`
		ModificationTime time.Time                    `gorm:"column:ModificationTime;<-:false"`
		PublicationTime  time.Time                    `gorm:"column:PublicationTime;<-:false"`
		DisclosureTime   time.Time                    `gorm:"column:DisclosureTime;<-:false"`
		References       []VulnerabilityReferenceDto  `gorm:"foreignKey:VulnerabilityId"`
		Identifiers      []VulnerabilityIdentifierDto `gorm:"foreignKey:VulnerabilityId"`
	}

	VulnerabilityReferenceDto struct {
		VulnerabilityId int    `gorm:"column:VulnerabilityId;primaryKey;<-:false"`
		Url             string `gorm:"column:Url;primaryKey;<-:false"`
	}

	VulnerabilityIdentifierDto struct {
		VulnerabilityId int    `gorm:"column:VulnerabilityId;primaryKey;<-:false"`
		IdentifierType  string `gorm:"column:IdentifierType;primaryKey;<-:false"`
		Identifier      string `gorm:"column:Identifier;primaryKey;<-:false"`
	}

	ImageDto struct {
		Id        int            `gorm:"column:Id;primaryKey;<-:false"`
		Name      string         `gorm:"column:Name;->;<-:create"`
		BaseImage string         `gorm:"column:BaseImage;->;<-:create"`
		Scans     []ImageScanDto `gorm:"foreignKey:ImageId"`
	}

	ImageScanDto struct {
		Id              int                `gorm:"column:Id;primaryKey;<-:false"`
		ImageId         int                `gorm:"column:ImageId;<-:false"`
		ScanTime        time.Time          `gorm:"column:ScanTime;<-:false"`
		ScanSuccess     bool               `gorm:"column:ScanSuccess;<-:false"`
		Vulnerabilities []VulnerabilityDto `gorm:"many2many:ImageScanVulnerabilities;joinForeignKey:ImageScanId;joinReferences:VulnerabilityId"` // https://gorm.io/docs/many_to_many.html
	}
)

func (VulnerabilityDto) TableName() string {
	return "dbo.Vulnerability"
}

func (VulnerabilityReferenceDto) TableName() string {
	return "dbo.VulnerabilityReferences"
}

func (VulnerabilityIdentifierDto) TableName() string {
	return "dbo.VulnerabilityIdentifiers"
}

func (ImageDto) TableName() string {
	return "dbo.Image"
}

func (ImageScanDto) TableName() string {
	return "dbo.ImageScan"
}
