package tokenstore_test

import (
	"context"
	"testing"

	"github.com/equinor/radix-vulnerability-scanner/pkg/tokenstore"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"golang.org/x/oauth2"
)

// TokenSourceFunc is a interface adapter for oauth2.TokenSource
type FakeTokenSourceFunc func() (*oauth2.Token, error)

func (s FakeTokenSourceFunc) Token() (*oauth2.Token, error) {
	return s()
}

func TestTokenStore(t *testing.T) {
	sourceFunc := FakeTokenSourceFunc(func() (*oauth2.Token, error) {
		return &oauth2.Token{
			AccessToken: "access-token",
		}, nil
	})
	store := tokenstore.New(tokenstore.WithTokenSource(
		"someregistry.io",
		sourceFunc,
	))
	auth, err := store.GetAuth(context.Background(), "someregistry.io/someimage:sometag")
	require.NoError(t, err)
	assert.Equal(t, "00000000-0000-0000-0000-000000000000", auth.Username)
	assert.Equal(t, "access-token", auth.Password)
}
func TestUnknownRegistryFails(t *testing.T) {
	store := tokenstore.New()
	_, err := store.GetAuth(context.Background(), "someregistry.io/someimage:sometag")
	assert.ErrorIs(t, tokenstore.ErrRegistryNotFound, err)
}
