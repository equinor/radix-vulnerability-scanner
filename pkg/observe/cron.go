package observe

import (
	"context"

	"github.com/robfig/cron/v3"
)

// NewCron creates an Observable that emits the value returned by notifyValueFunc to
// attached observers on times defined by the cronSpec
func NewCron[T any](ctx context.Context, cronSpec string, notifyValueFunc func() T) (Observable[T], error) {
	s := &observable[T]{}
	c := cron.New()
	c.Start()
	go func() {
		<-ctx.Done()
		c.Stop()
	}()
	_, err := c.AddFunc(cronSpec, func() {
		s.notifyObservers(notifyValueFunc())
	})
	return s, err
}
