package observe

var _ Subject[any] = &subject[any]{}

type (
	// Subject is a type of Observable that emits values to attached observers using the Next(T) method
	Subject[T any] interface {
		Observable[T]
		Next(T)
	}

	subject[T any] struct {
		observable[T]
	}
)

func NewSubject[T any]() Subject[T] {
	return &subject[T]{}
}

func (o *subject[T]) Next(obj T) {
	o.notifyObservers(obj)
}
