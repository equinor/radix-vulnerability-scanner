package observe

import v1 "github.com/equinor/radix-operator/pkg/apis/radix/v1"

type (
	// RadixDeploymentSubject interface {
	// 	Subject[*v1.RadixDeployment]
	// }

	// radixDeploymentSubject struct {
	// 	subject[*v1.RadixDeployment]
	// }

	RadixDeploymentContainerImageMapper struct {
		subject[string]
		Observer[*v1.RadixDeployment]
	}
)

// func NewRadixDeploymentSubject() RadixDeploymentSubject {
// 	return &radixDeploymentSubject{}
// }

func (m *RadixDeploymentContainerImageMapper) OnNext(rd *v1.RadixDeployment) {
	if rd != nil && rd.Status.Condition == v1.DeploymentActive {
		for _, c := range rd.Spec.Components {
			m.Next(c.GetImage())
		}

		for _, c := range rd.Spec.Jobs {
			m.Next(c.GetImage())
		}
	}
}
