package observe

import (
	v1 "github.com/equinor/radix-operator/pkg/apis/radix/v1"
)

var _ SubjectAndObserver[*v1.RadixDeployment, string] = &RadixDeploymentContainerImageMapper{}
var _ SubjectAndObserver[[]*v1.RadixDeployment, *v1.RadixDeployment] = &RadixDeploymentListMapper{}

type (
	RadixDeploymentContainerImageMapper struct {
		subject[string]
	}

	RadixDeploymentListMapper struct {
		subject[*v1.RadixDeployment]
	}
)

func (m *RadixDeploymentContainerImageMapper) Receive(rd *v1.RadixDeployment) {
	if rd == nil {
		return
	}

	for _, c := range rd.Spec.Components {
		m.NotifyObservers(c.GetImage())
	}

	for _, c := range rd.Spec.Jobs {
		m.NotifyObservers(c.GetImage())
	}
}

func (m *RadixDeploymentListMapper) Receive(rds []*v1.RadixDeployment) {
	for _, rd := range rds {
		m.NotifyObservers(rd)
	}
}
