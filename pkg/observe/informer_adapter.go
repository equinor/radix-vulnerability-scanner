package observe

type KubeInformerObservableAdapter[T any] struct {
	observable[T]
}

func (a *KubeInformerObservableAdapter[T]) OnAdd(obj interface{}) {
	a.handleObj(obj)
}
func (a *KubeInformerObservableAdapter[T]) OnUpdate(oldObj, newObj interface{}) {
	a.handleObj(newObj)
}
func (a *KubeInformerObservableAdapter[T]) OnDelete(obj interface{}) {}

func (a *KubeInformerObservableAdapter[T]) handleObj(obj any) {
	if realObj, ok := obj.(T); ok {
		a.notify(realObj)
	}
}
